// https://www.yuque.com/qyuhen/go/sgdoyc
package ch_4

import "unsafe"

/*
         x: int          p: *int
-------+---------------+--------------+-------
  ...  | 100           | 0xc000000000 |  ...    memory
-------+---------------+--------------+-------
       0xc000000000    0xc000000008             address
*/

/*
	取址运算符 & 用于获取目标地址。
	指针运算符 * 间接引用目标对象。
	二级指针 **T，含包名则写成 **package.T。
	指针默认值 nil，支持 ==、!= 操作。
	不支持指针运算，可借助 unsafe 变相实现。
*/
func main() {

	// 空指针也会分配内存。
	var p *int
	println(unsafe.Sizeof(p)) // 8

	/*

	   p: *int
	   +--------------+
	   | 0            |
	   +--------------+
	   0xc000000008

	*/

	var x int

	/*

	   p: *int                x: int
	   +---------------+      +---------------+
	   | 0             |      | 0             |
	   +---------------+      +---------------+
	   0xc000000008           0xc000000000

	*/

	// 二级指针，指针的指针。
	var pp **int = &p
	*pp = &x

	/*

	                               +--------- *p -----------+
	                               |                        |
	   pp: **int              p    |                 x      v
	   +---------------+      +---------------+      +---------------+
	   | 0xc000000008 -|----->| 0xc000000000 -|----->| 0             |
	   +---------------+      +---------------+      +---------------+
	   0xc000000010           0xc000000008   ^       0xc000000000   ^
	         |                               |                      |
	         +-------- *pp ------------------+                      |
	         |                                                      |
	         +-------- **pp ----------------------------------------+
	*/

	*p = 100
	**pp += 1

	println(**pp, *p, x) // 101, 101, 101
}
